#
# Build
#

build {
	core init ecu
	drivers/timer
	drivers/usb
	drivers/gpio
	server/usb_terminal
}

create_boot_directory

#
# Generate config
#

install_config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL" />
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="gpio_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Gpio"/></provides>
	</start>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="usb_drv">
		<resource name="RAM" quantum="7M"/>
		<provides><service name="Usb"/></provides>
		<config uhci="yes" ehci="yes" xhci="yes">
			<raw/>
		</config>
	</start>
	<start name="usb_terminal">
		<resource name="RAM" quantum="2M"/>
		<provides><service name="Terminal"/></provides>
	</start>
	<start name="ecu_test">
		<resource name="RAM" quantum="10M"/>
		<provides><service name="ECU-TEST"/></provides>
	</start>
</config>}

#
# Boot image
#

build_boot_image {
	core init ecu_test
	ld.lib.so
	stdcxx.lib.so
	libc.lib.so
	libm.lib.so
	timer
	gpio_drv
	usb_drv
	usb_terminal
}

append qemu_args " -nographic "

run_genode_until forever
